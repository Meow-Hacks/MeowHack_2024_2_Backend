name: Deploy Swagger Documentation to GitHub Pages

on:
  push:
    branches:
      - UsersMicroservice
      - LoginMicroservice
      - adminMicroservice
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Забираем все ветки для доступа

      - name: Check if /docs exists and create output directory
        run: |
          BRANCH_NAME=$(echo "${GITHUB_REF##*/}" | tr '[:upper:]' '[:lower:]' | sed 's/microservice//')
          mkdir -p output/$BRANCH_NAME
          if [ -d "./docs" ]; then
            echo "Docs directory exists."
            cp -r ./docs/* output/$BRANCH_NAME/
          else
            echo "No docs directory found. Creating empty output directory for branch $BRANCH_NAME."
          fi
          echo "Contents of output/$BRANCH_NAME:"
          ls output/$BRANCH_NAME || echo "Directory is empty."

      - name: Modify swagger.json (if exists)
        run: |
          if [ -f "output/${GITHUB_REF##*/}/swagger.json" ]; then
            echo "Modifying swagger.json"
            sed -i '1s|{|{"swagger": "2.0",|' output/${GITHUB_REF##*/}/swagger.json
            cat output/${GITHUB_REF##*/}/swagger.json
          else
            echo "No swagger.json found."
          fi

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './output'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Output deployed URLs
        run: |
          BRANCH_NAME=$(echo "${GITHUB_REF##*/}" | tr '[:upper:]' '[:lower:]' | sed 's/microservice//')
          echo "Deployed URL for branch $BRANCH_NAME: https://<your-username>.github.io/<your-repository>/$BRANCH_NAME"
